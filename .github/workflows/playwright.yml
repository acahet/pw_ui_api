name: Playwright Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
    paths:
      - 'tests/**'

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    env:
      EMAIL_API: ${{ secrets.EMAIL_API }}
      PASSWORD_API: ${{ secrets.PASSWORD_API }}
      API_URL: ${{ secrets.API_URL }}

    steps:
    - uses: actions/checkout@v4

    - name: Cache Node.js dependencies
      uses: actions/cache@v3
      id: cache-node
      with:
        path: |
          ~/.npm
          **/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock', '**/package-lock.json') }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - name: Install dependencies
      if: steps.cache-node.outputs.cache-hit != 'true'
      run: |
        npm install -g yarn
        yarn

    - name: Get Playwright version
      id: playwright-version
      run: echo "PLAYWRIGHT_VERSION=$(jq -r '.devDependencies[\"@playwright/test\"]' package.json)" >> $GITHUB_ENV

    - name: Cache Playwright browsers
      uses: actions/cache@v3
      id: cache-playwright
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

    - name: Install Playwright Chromium browser
      if: steps.cache-playwright.outputs.cache-hit != 'true'
      run: npx playwright install chromium --with-deps

    - name: Run Playwright API tests
      run: npx playwright test --project=api-tests

    - name: Run Playwright UI tests
      if: ${{ always() }}
      run: npx playwright test --project=ui-tests

    - uses: actions/upload-artifact@v4
      if: ${{ always() }}
      with:
        name: playwright-report
        path: tests/report/playwright-report/
        retention-days: 7
  deploy:
    needs: test
    if: ${{ always() }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download report artifact
        uses: actions/download-artifact@v4
        with:
          name: playwright-report
          path: tests/resport/playwright-report

      - name: Generate index of reports
        run: |
          INDEX_FILE="tests/resport/playwright-report/index.html"
          echo "<html><body><h1>Playwright Reports</h1><ul>" > $INDEX_FILE
          for dir in $(ls playwright-report | sort -r); do
            if [ -d "playwright-report/$dir" ]; then
              echo "<li><a href='./$dir/index.html'>$dir</a></li>" >> $INDEX_FILE
            fi
          done
          echo "</ul></body></html>" >> $INDEX_FILE

      - name: Deploy report to GitHub Pages with history
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: tests/resport/playwright-report
          keep_files: true